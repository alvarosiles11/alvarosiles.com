{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nfunction isScreenReaderEnabled() {\n  return new Promise(function (resolve, reject) {\n    resolve(true);\n  });\n}\nvar prefersReducedMotionMedia = canUseDOM && typeof window.matchMedia === 'function' ? window.matchMedia('(prefers-reduced-motion: reduce)') : null;\nfunction isReduceMotionEnabled() {\n  return new Promise(function (resolve, reject) {\n    resolve(prefersReducedMotionMedia ? prefersReducedMotionMedia.matches : true);\n  });\n}\nfunction addChangeListener(fn) {\n  if (prefersReducedMotionMedia != null) {\n    prefersReducedMotionMedia.addEventListener != null ? prefersReducedMotionMedia.addEventListener('change', fn) : prefersReducedMotionMedia.addListener(fn);\n  }\n}\nfunction removeChangeListener(fn) {\n  if (prefersReducedMotionMedia != null) {\n    prefersReducedMotionMedia.removeEventListener != null ? prefersReducedMotionMedia.removeEventListener('change', fn) : prefersReducedMotionMedia.removeListener(fn);\n  }\n}\nvar handlers = {};\nvar AccessibilityInfo = {\n  /**\r\n   * Query whether a screen reader is currently enabled.\r\n   *\r\n   * Returns a promise which resolves to a boolean.\r\n   * The result is `true` when a screen reader is enabled and `false` otherwise.\r\n   */\n  isScreenReaderEnabled: isScreenReaderEnabled,\n  /**\r\n   * Query whether the user prefers reduced motion.\r\n   *\r\n   * Returns a promise which resolves to a boolean.\r\n   * The result is `true` when a screen reader is enabled and `false` otherwise.\r\n   */\n  isReduceMotionEnabled: isReduceMotionEnabled,\n  /**\r\n   * Deprecated\r\n   */\n  fetch: isScreenReaderEnabled,\n  /**\r\n   * Add an event handler. Supported events: reduceMotionChanged\r\n   */\n  addEventListener: function addEventListener(eventName, handler) {\n    if (eventName === 'reduceMotionChanged') {\n      if (!prefersReducedMotionMedia) {\n        return;\n      }\n      var listener = function listener(event) {\n        handler(event.matches);\n      };\n      addChangeListener(listener);\n      handlers[handler] = listener;\n    }\n    return {\n      remove: function remove() {\n        return AccessibilityInfo.removeEventListener(eventName, handler);\n      }\n    };\n  },\n  /**\r\n   * Set accessibility focus to a react component.\r\n   */\n  setAccessibilityFocus: function setAccessibilityFocus(reactTag) {},\n  /**\r\n   * Post a string to be announced by the screen reader.\r\n   */\n  announceForAccessibility: function announceForAccessibility(announcement) {},\n  /**\r\n   * Remove an event handler.\r\n   */\n  removeEventListener: function removeEventListener(eventName, handler) {\n    if (eventName === 'reduceMotionChanged') {\n      var listener = handlers[handler];\n      if (!listener || !prefersReducedMotionMedia) {\n        return;\n      }\n      removeChangeListener(listener);\n    }\n    return;\n  }\n};\nexport default AccessibilityInfo;","map":{"version":3,"names":["canUseDOM","isScreenReaderEnabled","Promise","resolve","reject","prefersReducedMotionMedia","window","matchMedia","isReduceMotionEnabled","matches","addChangeListener","fn","addEventListener","addListener","removeChangeListener","removeEventListener","removeListener","handlers","AccessibilityInfo","fetch","eventName","handler","listener","event","remove","setAccessibilityFocus","reactTag","announceForAccessibility","announcement"],"sources":["C:/Users/julieta/Documents/GitHub/alvarosiles.com/app/node_modules/react-native-web/dist/exports/AccessibilityInfo/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\r\n\r\nfunction isScreenReaderEnabled() {\r\n  return new Promise(function (resolve, reject) {\r\n    resolve(true);\r\n  });\r\n}\r\n\r\nvar prefersReducedMotionMedia = canUseDOM && typeof window.matchMedia === 'function' ? window.matchMedia('(prefers-reduced-motion: reduce)') : null;\r\n\r\nfunction isReduceMotionEnabled() {\r\n  return new Promise(function (resolve, reject) {\r\n    resolve(prefersReducedMotionMedia ? prefersReducedMotionMedia.matches : true);\r\n  });\r\n}\r\n\r\nfunction addChangeListener(fn) {\r\n  if (prefersReducedMotionMedia != null) {\r\n    prefersReducedMotionMedia.addEventListener != null ? prefersReducedMotionMedia.addEventListener('change', fn) : prefersReducedMotionMedia.addListener(fn);\r\n  }\r\n}\r\n\r\nfunction removeChangeListener(fn) {\r\n  if (prefersReducedMotionMedia != null) {\r\n    prefersReducedMotionMedia.removeEventListener != null ? prefersReducedMotionMedia.removeEventListener('change', fn) : prefersReducedMotionMedia.removeListener(fn);\r\n  }\r\n}\r\n\r\nvar handlers = {};\r\nvar AccessibilityInfo = {\r\n  /**\r\n   * Query whether a screen reader is currently enabled.\r\n   *\r\n   * Returns a promise which resolves to a boolean.\r\n   * The result is `true` when a screen reader is enabled and `false` otherwise.\r\n   */\r\n  isScreenReaderEnabled: isScreenReaderEnabled,\r\n\r\n  /**\r\n   * Query whether the user prefers reduced motion.\r\n   *\r\n   * Returns a promise which resolves to a boolean.\r\n   * The result is `true` when a screen reader is enabled and `false` otherwise.\r\n   */\r\n  isReduceMotionEnabled: isReduceMotionEnabled,\r\n\r\n  /**\r\n   * Deprecated\r\n   */\r\n  fetch: isScreenReaderEnabled,\r\n\r\n  /**\r\n   * Add an event handler. Supported events: reduceMotionChanged\r\n   */\r\n  addEventListener: function addEventListener(eventName, handler) {\r\n    if (eventName === 'reduceMotionChanged') {\r\n      if (!prefersReducedMotionMedia) {\r\n        return;\r\n      }\r\n\r\n      var listener = function listener(event) {\r\n        handler(event.matches);\r\n      };\r\n\r\n      addChangeListener(listener);\r\n      handlers[handler] = listener;\r\n    }\r\n\r\n    return {\r\n      remove: function remove() {\r\n        return AccessibilityInfo.removeEventListener(eventName, handler);\r\n      }\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Set accessibility focus to a react component.\r\n   */\r\n  setAccessibilityFocus: function setAccessibilityFocus(reactTag) {},\r\n\r\n  /**\r\n   * Post a string to be announced by the screen reader.\r\n   */\r\n  announceForAccessibility: function announceForAccessibility(announcement) {},\r\n\r\n  /**\r\n   * Remove an event handler.\r\n   */\r\n  removeEventListener: function removeEventListener(eventName, handler) {\r\n    if (eventName === 'reduceMotionChanged') {\r\n      var listener = handlers[handler];\r\n\r\n      if (!listener || !prefersReducedMotionMedia) {\r\n        return;\r\n      }\r\n\r\n      removeChangeListener(listener);\r\n    }\r\n\r\n    return;\r\n  }\r\n};\r\nexport default AccessibilityInfo;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,+BAA+B;AAEzD,SAASC,qBAAqB,GAAG;EAC/B,OAAO,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;IAC5CD,OAAO,CAAC,IAAI,CAAC;EACf,CAAC,CAAC;AACJ;AAEA,IAAIE,yBAAyB,GAAGL,SAAS,IAAI,OAAOM,MAAM,CAACC,UAAU,KAAK,UAAU,GAAGD,MAAM,CAACC,UAAU,CAAC,kCAAkC,CAAC,GAAG,IAAI;AAEnJ,SAASC,qBAAqB,GAAG;EAC/B,OAAO,IAAIN,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;IAC5CD,OAAO,CAACE,yBAAyB,GAAGA,yBAAyB,CAACI,OAAO,GAAG,IAAI,CAAC;EAC/E,CAAC,CAAC;AACJ;AAEA,SAASC,iBAAiB,CAACC,EAAE,EAAE;EAC7B,IAAIN,yBAAyB,IAAI,IAAI,EAAE;IACrCA,yBAAyB,CAACO,gBAAgB,IAAI,IAAI,GAAGP,yBAAyB,CAACO,gBAAgB,CAAC,QAAQ,EAAED,EAAE,CAAC,GAAGN,yBAAyB,CAACQ,WAAW,CAACF,EAAE,CAAC;EAC3J;AACF;AAEA,SAASG,oBAAoB,CAACH,EAAE,EAAE;EAChC,IAAIN,yBAAyB,IAAI,IAAI,EAAE;IACrCA,yBAAyB,CAACU,mBAAmB,IAAI,IAAI,GAAGV,yBAAyB,CAACU,mBAAmB,CAAC,QAAQ,EAAEJ,EAAE,CAAC,GAAGN,yBAAyB,CAACW,cAAc,CAACL,EAAE,CAAC;EACpK;AACF;AAEA,IAAIM,QAAQ,GAAG,CAAC,CAAC;AACjB,IAAIC,iBAAiB,GAAG;EACtB;AACF;AACA;AACA;AACA;AACA;EACEjB,qBAAqB,EAAEA,qBAAqB;EAE5C;AACF;AACA;AACA;AACA;AACA;EACEO,qBAAqB,EAAEA,qBAAqB;EAE5C;AACF;AACA;EACEW,KAAK,EAAElB,qBAAqB;EAE5B;AACF;AACA;EACEW,gBAAgB,EAAE,SAASA,gBAAgB,CAACQ,SAAS,EAAEC,OAAO,EAAE;IAC9D,IAAID,SAAS,KAAK,qBAAqB,EAAE;MACvC,IAAI,CAACf,yBAAyB,EAAE;QAC9B;MACF;MAEA,IAAIiB,QAAQ,GAAG,SAASA,QAAQ,CAACC,KAAK,EAAE;QACtCF,OAAO,CAACE,KAAK,CAACd,OAAO,CAAC;MACxB,CAAC;MAEDC,iBAAiB,CAACY,QAAQ,CAAC;MAC3BL,QAAQ,CAACI,OAAO,CAAC,GAAGC,QAAQ;IAC9B;IAEA,OAAO;MACLE,MAAM,EAAE,SAASA,MAAM,GAAG;QACxB,OAAON,iBAAiB,CAACH,mBAAmB,CAACK,SAAS,EAAEC,OAAO,CAAC;MAClE;IACF,CAAC;EACH,CAAC;EAED;AACF;AACA;EACEI,qBAAqB,EAAE,SAASA,qBAAqB,CAACC,QAAQ,EAAE,CAAC,CAAC;EAElE;AACF;AACA;EACEC,wBAAwB,EAAE,SAASA,wBAAwB,CAACC,YAAY,EAAE,CAAC,CAAC;EAE5E;AACF;AACA;EACEb,mBAAmB,EAAE,SAASA,mBAAmB,CAACK,SAAS,EAAEC,OAAO,EAAE;IACpE,IAAID,SAAS,KAAK,qBAAqB,EAAE;MACvC,IAAIE,QAAQ,GAAGL,QAAQ,CAACI,OAAO,CAAC;MAEhC,IAAI,CAACC,QAAQ,IAAI,CAACjB,yBAAyB,EAAE;QAC3C;MACF;MAEAS,oBAAoB,CAACQ,QAAQ,CAAC;IAChC;IAEA;EACF;AACF,CAAC;AACD,eAAeJ,iBAAiB"},"metadata":{},"sourceType":"module"}