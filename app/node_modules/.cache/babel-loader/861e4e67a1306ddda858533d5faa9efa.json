{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { SThread } from 'servisofts-component';\nimport SSClient from './SSClient/index';\nvar SSession = /** @class */function () {\n  function SSession(props) {\n    this.timePing = 10 * 1000; // time * (milliseconds)\n    this.timeReconect = 2 * 1000; // time * (milliseconds)\n    this.timeReintent = 5 * 1000; // time * (milliseconds)\n    this.mensajeTemp = \"\";\n    this.props = props;\n    // this.log(\"Instanciando el socket\");\n    // this.log(\"props\", JSON.stringify(props, null, \"\\t\"));\n    this.socket = new SSClient(props, this);\n  }\n  SSession.prototype.isOpen = function () {\n    if (!this.identificado) return false;\n    return this.socket.isOpen();\n  };\n  SSession.prototype.init = function (instance) {\n    // this.log(\"Init\")\n    this.ssocketInstance = instance;\n    this.socket.open();\n  };\n  SSession.prototype.ping = function () {\n    var _this = this;\n    new SThread(this.timePing, \"hiloSocket_ping_\" + this.props.name, true).start(function () {\n      if (!_this.isOpen()) {\n        return;\n      }\n      if (!_this) return;\n      if (!_this.identificado) {\n        if (!_this.identificarse) return;\n        _this.identificarse();\n      }\n      _this.socket.open();\n      // this.log(\"ping\");\n      _this.ping();\n    });\n  };\n  SSession.prototype.reconect = function () {\n    var _this = this;\n    new SThread(this.timeReconect, \"hiloSocket_reconect_\" + this.props.name, true).start(function () {\n      if (_this.isOpen()) {\n        return;\n      }\n      _this.log(\"intentando reconectar...\");\n      _this.socket.open();\n      _this.reconect();\n    });\n  };\n  SSession.prototype.indentificarse = function () {\n    if (!this.ssocketInstance.props) return;\n    if (!this.ssocketInstance.props.identificarse) return;\n    var prIdent = this.ssocketInstance.props.identificarse(this.ssocketInstance.props);\n    var usr = false;\n    var deviceKey = \"deviceKey\";\n    var objSend = __assign(__assign({\n      component: \"usuario\",\n      type: \"identificacion\",\n      data: {},\n      deviceKey: deviceKey\n    }, prIdent), {\n      estado: \"cargando\"\n    });\n    this.send(objSend);\n  };\n  SSession.prototype.reintent = function (obj) {\n    var _this = this;\n    if (typeof obj != 'object') {\n      try {\n        obj = JSON.parse(obj);\n      } catch (e) {\n        this.log(\"ERROR\", \"notifyRedux error al convertir el mensaje a JSON\");\n        return;\n      }\n    }\n    new SThread(this.timeReintent, \"hilo_reintent\" + obj.component, true).start(function () {\n      obj.estado = \"\";\n      _this.notifyRedux(obj);\n    });\n  };\n  SSession.prototype.send = function (msn) {\n    var str = msn;\n    if (typeof msn == 'object') {\n      str = JSON.stringify(msn);\n    }\n    if (!this.socket) {\n      return;\n    }\n    if (!this.socket.send) return;\n    this.socket.send(str);\n    this.notifyRedux(str);\n    this.reintent(str);\n    return true;\n  };\n  SSession.prototype.onOpen = function () {\n    this.ping();\n    this.identificado = false;\n    this.indentificarse();\n    // this.log(\"onOpen\");\n  };\n\n  SSession.prototype.onClose = function () {\n    this.log(\"onClose\");\n    this.reconect();\n    this.identificado = false;\n  };\n  SSession.prototype.onError = function (evt) {\n    this.log(\"onError\", JSON.stringify(evt));\n  };\n  SSession.prototype.notifyRedux = function (obj) {\n    if (typeof obj != 'object') {\n      try {\n        obj = JSON.parse(obj);\n      } catch (e) {\n        console.log(e);\n        this.log(\"ERROR\", \"notifyRedux error al convertir el mensaje a JSON\");\n        return;\n      }\n    }\n    if (!this.ssocketInstance) {\n      this.log(\"ERROR\", \"No hay ssocketInstance, No se pudo hacer dispatch del mensaje.\");\n      return;\n    }\n    this.ssocketInstance.props.dispatch(obj);\n    return;\n  };\n  SSession.prototype.onMessage = function (msn) {\n    this.mensajeTemp += msn;\n    if (/---SSofts---/.test(msn)) {\n      this.mensajeTemp = this.mensajeTemp.replace(/---SSofts---/, '');\n      var arr = this.mensajeTemp.split(\"---SSkey---\");\n      this.mensajeTemp = \"\"; // reset cola;\n      var mensaje = arr[0]; //data\n      var key = arr[1]; // SSkey\n      this.log(mensaje);\n      try {\n        var obj = JSON.parse(mensaje);\n        this.notifyRedux(obj);\n        this.manejadorInterno(obj);\n      } catch (e) {\n        this.log(\"onMessage Error\", e);\n      }\n    }\n  };\n  SSession.prototype.manejadorInterno = function (obj) {\n    if (!obj.component) return;\n    switch (obj.component) {\n      case \"usuario\":\n        switch (obj.type) {\n          case \"identificacion\":\n            if (obj.estado == \"exito\") {\n              this.identificado = true;\n              this.notifyRedux({\n                component: \"usuario\",\n                type: \"identificacion\",\n                estado: \"exito\"\n              });\n              // this.log(\"identificado con exito\");\n              return;\n            }\n          default:\n            return;\n        }\n      default:\n        return;\n    }\n  };\n  SSession.prototype.getTitle = function (color) {\n    return \"SSocket:\\u001B[\" + color + \"m\" + this.props.name + \" < \" + this.props.host + \" >\\u001B[39m\\n\";\n  };\n  SSession.prototype.log = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    console.log.apply(console, __spreadArray([this.getTitle(34)], args, false));\n    // if (!this.ssocketInstance) return;\n    // var msn = this.props.name + ':';\n    // for (var i = 0; i < arguments.length; i++) {\n    //     msn += arguments[i];\n    // }\n    // this.ssocketInstance.state.log.push(msn);\n    // this.ssocketInstance.setState({ log: this.ssocketInstance.state.log });\n  };\n\n  return SSession;\n}();\nexport default SSession;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArray","to","from","pack","l","ar","Array","slice","concat","SThread","SSClient","SSession","props","timePing","timeReconect","timeReintent","mensajeTemp","socket","isOpen","identificado","init","instance","ssocketInstance","open","ping","_this","name","start","identificarse","reconect","log","indentificarse","prIdent","usr","deviceKey","objSend","component","type","data","estado","send","reintent","obj","JSON","parse","e","notifyRedux","msn","str","stringify","onOpen","onClose","onError","evt","console","dispatch","onMessage","test","replace","arr","split","mensaje","key","manejadorInterno","getTitle","color","host","args","_i"],"sources":["C:/Users/julieta/Documents/GitHub/alvarosiles.com/app/node_modules/servisofts-socket/SSocket/SSession/index.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nimport { SThread } from 'servisofts-component';\r\nimport SSClient from './SSClient/index';\r\nvar SSession = /** @class */ (function () {\r\n    function SSession(props) {\r\n        this.timePing = 10 * (1000); // time * (milliseconds)\r\n        this.timeReconect = 2 * (1000); // time * (milliseconds)\r\n        this.timeReintent = 5 * (1000); // time * (milliseconds)\r\n        this.mensajeTemp = \"\";\r\n        this.props = props;\r\n        // this.log(\"Instanciando el socket\");\r\n        // this.log(\"props\", JSON.stringify(props, null, \"\\t\"));\r\n        this.socket = new SSClient(props, this);\r\n    }\r\n    SSession.prototype.isOpen = function () {\r\n        if (!this.identificado)\r\n            return false;\r\n        return this.socket.isOpen();\r\n    };\r\n    SSession.prototype.init = function (instance) {\r\n        // this.log(\"Init\")\r\n        this.ssocketInstance = instance;\r\n        this.socket.open();\r\n    };\r\n    SSession.prototype.ping = function () {\r\n        var _this = this;\r\n        new SThread(this.timePing, \"hiloSocket_ping_\" + this.props.name, true).start(function () {\r\n            if (!_this.isOpen()) {\r\n                return;\r\n            }\r\n            if (!_this)\r\n                return;\r\n            if (!_this.identificado) {\r\n                if (!_this.identificarse)\r\n                    return;\r\n                _this.identificarse();\r\n            }\r\n            _this.socket.open();\r\n            // this.log(\"ping\");\r\n            _this.ping();\r\n        });\r\n    };\r\n    SSession.prototype.reconect = function () {\r\n        var _this = this;\r\n        new SThread(this.timeReconect, \"hiloSocket_reconect_\" + this.props.name, true).start(function () {\r\n            if (_this.isOpen()) {\r\n                return;\r\n            }\r\n            _this.log(\"intentando reconectar...\");\r\n            _this.socket.open();\r\n            _this.reconect();\r\n        });\r\n    };\r\n    SSession.prototype.indentificarse = function () {\r\n        if (!this.ssocketInstance.props)\r\n            return;\r\n        if (!this.ssocketInstance.props.identificarse)\r\n            return;\r\n        var prIdent = this.ssocketInstance.props.identificarse(this.ssocketInstance.props);\r\n        var usr = false;\r\n        var deviceKey = \"deviceKey\";\r\n        var objSend = __assign(__assign({ component: \"usuario\", type: \"identificacion\", data: {}, deviceKey: deviceKey }, prIdent), { estado: \"cargando\" });\r\n        this.send(objSend);\r\n    };\r\n    SSession.prototype.reintent = function (obj) {\r\n        var _this = this;\r\n        if (typeof obj != 'object') {\r\n            try {\r\n                obj = JSON.parse(obj);\r\n            }\r\n            catch (e) {\r\n                this.log(\"ERROR\", \"notifyRedux error al convertir el mensaje a JSON\");\r\n                return;\r\n            }\r\n        }\r\n        new SThread(this.timeReintent, \"hilo_reintent\" + obj.component, true).start(function () {\r\n            obj.estado = \"\";\r\n            _this.notifyRedux(obj);\r\n        });\r\n    };\r\n    SSession.prototype.send = function (msn) {\r\n        var str = msn;\r\n        if (typeof msn == 'object') {\r\n            str = JSON.stringify(msn);\r\n        }\r\n        if (!this.socket) {\r\n            return;\r\n        }\r\n        if (!this.socket.send)\r\n            return;\r\n        this.socket.send(str);\r\n        this.notifyRedux(str);\r\n        this.reintent(str);\r\n        return true;\r\n    };\r\n    SSession.prototype.onOpen = function () {\r\n        this.ping();\r\n        this.identificado = false;\r\n        this.indentificarse();\r\n        // this.log(\"onOpen\");\r\n    };\r\n    SSession.prototype.onClose = function () {\r\n        this.log(\"onClose\");\r\n        this.reconect();\r\n        this.identificado = false;\r\n    };\r\n    SSession.prototype.onError = function (evt) {\r\n        this.log(\"onError\", JSON.stringify(evt));\r\n    };\r\n    SSession.prototype.notifyRedux = function (obj) {\r\n        if (typeof obj != 'object') {\r\n            try {\r\n                obj = JSON.parse(obj);\r\n            }\r\n            catch (e) {\r\n                console.log(e);\r\n                this.log(\"ERROR\", \"notifyRedux error al convertir el mensaje a JSON\");\r\n                return;\r\n            }\r\n        }\r\n        if (!this.ssocketInstance) {\r\n            this.log(\"ERROR\", \"No hay ssocketInstance, No se pudo hacer dispatch del mensaje.\");\r\n            return;\r\n        }\r\n        this.ssocketInstance.props.dispatch(obj);\r\n        return;\r\n    };\r\n    SSession.prototype.onMessage = function (msn) {\r\n        this.mensajeTemp += msn;\r\n        if (/---SSofts---/.test(msn)) {\r\n            this.mensajeTemp = this.mensajeTemp.replace(/---SSofts---/, '');\r\n            var arr = this.mensajeTemp.split(\"---SSkey---\");\r\n            this.mensajeTemp = \"\"; // reset cola;\r\n            var mensaje = arr[0]; //data\r\n            var key = arr[1]; // SSkey\r\n            this.log(mensaje);\r\n            try {\r\n                var obj = JSON.parse(mensaje);\r\n                this.notifyRedux(obj);\r\n                this.manejadorInterno(obj);\r\n            }\r\n            catch (e) {\r\n                this.log(\"onMessage Error\", e);\r\n            }\r\n        }\r\n    };\r\n    SSession.prototype.manejadorInterno = function (obj) {\r\n        if (!obj.component)\r\n            return;\r\n        switch (obj.component) {\r\n            case \"usuario\":\r\n                switch (obj.type) {\r\n                    case \"identificacion\":\r\n                        if (obj.estado == \"exito\") {\r\n                            this.identificado = true;\r\n                            this.notifyRedux({\r\n                                component: \"usuario\",\r\n                                type: \"identificacion\",\r\n                                estado: \"exito\"\r\n                            });\r\n                            // this.log(\"identificado con exito\");\r\n                            return;\r\n                        }\r\n                    default: return;\r\n                }\r\n            default: return;\r\n        }\r\n    };\r\n    SSession.prototype.getTitle = function (color) {\r\n        return \"SSocket:\\u001B[\" + color + \"m\" + this.props.name + \" < \" + this.props.host + \" >\\u001B[39m\\n\";\r\n    };\r\n    SSession.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        console.log.apply(console, __spreadArray([this.getTitle(34)], args, false));\r\n        // if (!this.ssocketInstance) return;\r\n        // var msn = this.props.name + ':';\r\n        // for (var i = 0; i < arguments.length; i++) {\r\n        //     msn += arguments[i];\r\n        // }\r\n        // this.ssocketInstance.state.log.push(msn);\r\n        // this.ssocketInstance.setState({ log: this.ssocketInstance.state.log });\r\n    };\r\n    return SSession;\r\n}());\r\nexport default SSession;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}