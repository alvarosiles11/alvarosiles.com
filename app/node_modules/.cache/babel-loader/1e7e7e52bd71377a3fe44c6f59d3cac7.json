{"ast":null,"code":"/**\r\n * Copyright (c) Nicolas Gallagher.\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nimport invariant from 'fbjs/lib/invariant';\nimport requestIdleCallback, { cancelIdleCallback } from '../../modules/requestIdleCallback';\nvar InteractionManager = {\n  Events: {\n    interactionStart: 'interactionStart',\n    interactionComplete: 'interactionComplete'\n  },\n  /**\r\n   * Schedule a function to run after all interactions have completed.\r\n   */\n  runAfterInteractions: function runAfterInteractions(task) {\n    var handle;\n    var promise = new Promise(function (resolve) {\n      handle = requestIdleCallback(function () {\n        if (task) {\n          resolve(task());\n        } else {\n          resolve();\n        }\n      });\n    });\n    return {\n      then: promise.then.bind(promise),\n      done: promise.then.bind(promise),\n      cancel: function cancel() {\n        cancelIdleCallback(handle);\n      }\n    };\n  },\n  /**\r\n   * Notify manager that an interaction has started.\r\n   */\n  createInteractionHandle: function createInteractionHandle() {\n    return 1;\n  },\n  /**\r\n   * Notify manager that an interaction has completed.\r\n   */\n  clearInteractionHandle: function clearInteractionHandle(handle) {\n    invariant(!!handle, 'Must provide a handle to clear.');\n  },\n  addListener: function addListener() {}\n};\nexport default InteractionManager;","map":{"version":3,"names":["invariant","requestIdleCallback","cancelIdleCallback","InteractionManager","Events","interactionStart","interactionComplete","runAfterInteractions","task","handle","promise","Promise","resolve","then","bind","done","cancel","createInteractionHandle","clearInteractionHandle","addListener"],"sources":["C:/Users/julieta/Documents/GitHub/alvarosiles.com/app/node_modules/react-native-web/dist/exports/InteractionManager/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport invariant from 'fbjs/lib/invariant';\r\nimport requestIdleCallback, { cancelIdleCallback } from '../../modules/requestIdleCallback';\r\nvar InteractionManager = {\r\n  Events: {\r\n    interactionStart: 'interactionStart',\r\n    interactionComplete: 'interactionComplete'\r\n  },\r\n\r\n  /**\r\n   * Schedule a function to run after all interactions have completed.\r\n   */\r\n  runAfterInteractions: function runAfterInteractions(task) {\r\n    var handle;\r\n    var promise = new Promise(function (resolve) {\r\n      handle = requestIdleCallback(function () {\r\n        if (task) {\r\n          resolve(task());\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n    return {\r\n      then: promise.then.bind(promise),\r\n      done: promise.then.bind(promise),\r\n      cancel: function cancel() {\r\n        cancelIdleCallback(handle);\r\n      }\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Notify manager that an interaction has started.\r\n   */\r\n  createInteractionHandle: function createInteractionHandle() {\r\n    return 1;\r\n  },\r\n\r\n  /**\r\n   * Notify manager that an interaction has completed.\r\n   */\r\n  clearInteractionHandle: function clearInteractionHandle(handle) {\r\n    invariant(!!handle, 'Must provide a handle to clear.');\r\n  },\r\n  addListener: function addListener() {}\r\n};\r\nexport default InteractionManager;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,mBAAmB,IAAIC,kBAAkB,QAAQ,mCAAmC;AAC3F,IAAIC,kBAAkB,GAAG;EACvBC,MAAM,EAAE;IACNC,gBAAgB,EAAE,kBAAkB;IACpCC,mBAAmB,EAAE;EACvB,CAAC;EAED;AACF;AACA;EACEC,oBAAoB,EAAE,SAASA,oBAAoB,CAACC,IAAI,EAAE;IACxD,IAAIC,MAAM;IACV,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAE;MAC3CH,MAAM,GAAGR,mBAAmB,CAAC,YAAY;QACvC,IAAIO,IAAI,EAAE;UACRI,OAAO,CAACJ,IAAI,EAAE,CAAC;QACjB,CAAC,MAAM;UACLI,OAAO,EAAE;QACX;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,OAAO;MACLC,IAAI,EAAEH,OAAO,CAACG,IAAI,CAACC,IAAI,CAACJ,OAAO,CAAC;MAChCK,IAAI,EAAEL,OAAO,CAACG,IAAI,CAACC,IAAI,CAACJ,OAAO,CAAC;MAChCM,MAAM,EAAE,SAASA,MAAM,GAAG;QACxBd,kBAAkB,CAACO,MAAM,CAAC;MAC5B;IACF,CAAC;EACH,CAAC;EAED;AACF;AACA;EACEQ,uBAAuB,EAAE,SAASA,uBAAuB,GAAG;IAC1D,OAAO,CAAC;EACV,CAAC;EAED;AACF;AACA;EACEC,sBAAsB,EAAE,SAASA,sBAAsB,CAACT,MAAM,EAAE;IAC9DT,SAAS,CAAC,CAAC,CAACS,MAAM,EAAE,iCAAiC,CAAC;EACxD,CAAC;EACDU,WAAW,EAAE,SAASA,WAAW,GAAG,CAAC;AACvC,CAAC;AACD,eAAehB,kBAAkB"},"metadata":{},"sourceType":"module"}