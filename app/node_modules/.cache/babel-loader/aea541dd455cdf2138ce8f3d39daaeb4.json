{"ast":null,"code":"import * as React from 'react';\nimport { nanoid } from 'nanoid/non-secure';\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\n\nexport default function useRegisterNavigator() {\n  const [key] = React.useState(() => nanoid());\n  const container = React.useContext(SingleNavigatorContext);\n  if (container === undefined) {\n    throw new Error(\"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\");\n  }\n  React.useEffect(() => {\n    const {\n      register,\n      unregister\n    } = container;\n    register(key);\n    return () => unregister(key);\n  }, [container, key]);\n  return key;\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,sBAAT,QAAuC,yBAAvC;AAEA;AACA;AACA;AACA;;AACA,eAAe,SAASC,oBAAT,GAAgC;EAC7C,MAAM,CAACC,GAAD,IAAQJ,KAAK,CAACK,QAAN,CAAe,MAAMJ,MAAM,EAA3B,CAAd;EACA,MAAMK,SAAS,GAAGN,KAAK,CAACO,UAAN,CAAiBL,sBAAjB,CAAlB;EAEA,IAAII,SAAS,KAAKE,SAAlB,EAA6B;IAC3B,MAAM,IAAIC,KAAJ,CACJ,wFADI,CAAN;EAGD;EAEDT,KAAK,CAACU,SAAN,CAAgB,MAAM;IACpB,MAAM;MAAEC,QAAF;MAAYC;IAAZ,IAA2BN,SAAjC;IAEAK,QAAQ,CAACP,GAAD,CAAR;IAEA,OAAO,MAAMQ,UAAU,CAACR,GAAD,CAAvB;EACD,CAND,EAMG,CAACE,SAAD,EAAYF,GAAZ,CANH;EAQA,OAAOA,GAAP;AACD","names":["React","nanoid","SingleNavigatorContext","useRegisterNavigator","key","useState","container","useContext","undefined","Error","useEffect","register","unregister"],"sources":["useRegisterNavigator.tsx"],"sourcesContent":["import * as React from 'react';\nimport { nanoid } from 'nanoid/non-secure';\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\nexport default function useRegisterNavigator() {\n  const [key] = React.useState(() => nanoid());\n  const container = React.useContext(SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\n      \"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\"\n    );\n  }\n\n  React.useEffect(() => {\n    const { register, unregister } = container;\n\n    register(key);\n\n    return () => unregister(key);\n  }, [container, key]);\n\n  return key;\n}\n"]},"metadata":{},"sourceType":"module"}