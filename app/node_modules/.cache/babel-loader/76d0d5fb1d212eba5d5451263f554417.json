{"ast":null,"code":"import { SStorage } from 'servisofts-component';\nimport Parent from './index';\nconst initialState = () => {\n  var initialState = {\n    component: Parent.component,\n    version: Parent.version\n  };\n  SStorage.getItem(\"usr_log\", resp => {\n    initialState.usuarioLog = JSON.parse(resp);\n  });\n  return initialState;\n};\nexport default ((state, action) => {\n  if (!state) return initialState();\n  if (action.component != Parent.component) return state;\n  // if (action.version != Parent.version) return state;\n  TypesSwitch(state, action);\n  state.type = action.type;\n  state.estado = action.estado;\n  state.error = action.error;\n  state.lastSend = new Date();\n  state = {\n    ...state\n  };\n  return state;\n});\nconst TypesSwitch = (state, action) => {\n  switch (action.type) {\n    case \"getAll\":\n      return getAll(state, action);\n    case \"registro\":\n      return registro(state, action);\n    case \"editar\":\n      return editar(state, action);\n    case \"getById\":\n      return getById(state, action);\n    case \"login\":\n      return login(state, action);\n    case \"loginGmail\":\n      return loginGmail(state, action);\n    case \"loginFacebook\":\n      return loginFacebook(state, action);\n    case \"recuperarPass\":\n      return recuperarPass(state, action);\n    case \"verificarCodigoPass\":\n      return verificarCodigoPass(state, action);\n  }\n};\n_c = TypesSwitch;\nconst getAll = (state, action) => {\n  if (action.estado != \"exito\") return;\n  state.data = action.data;\n};\nconst registro = (state, action) => {\n  if (action.estado != \"exito\") return;\n  state.lastRegister = action.data;\n  if (!state.data) return;\n  state.data[action.data.key] = action.data;\n};\nconst editar = (state, action) => {\n  if (action.estado != \"exito\") return;\n  if (state.usuarioLog) {\n    if (state.usuarioLog.key == action.data.key) {\n      state.usuarioLog = action.data;\n      SStorage.setItem(\"usr_log\", JSON.stringify(action.data));\n    }\n  }\n  if (!state.data) return;\n  state.data[action.data.key] = action.data;\n};\nconst getById = (state, action) => {\n  if (action.estado != \"exito\") return;\n  state.data[action.data.key] = action.data;\n};\nconst login = (state, action) => {\n  if (action.estado != \"exito\") return;\n  state.usuarioLog = action.data;\n  SStorage.setItem(\"usr_log\", JSON.stringify(action.data));\n  state.login = action.data;\n};\nconst loginGmail = (state, action) => {\n  state.gmailData = action.data;\n  if (action.estado != \"exito\") return;\n  state.usuarioLog = action.data;\n  SStorage.setItem(\"usr_log\", JSON.stringify(action.data));\n  state.login = action.data;\n};\nconst loginFacebook = (state, action) => {\n  state.facebookData = action.data;\n  if (action.estado != \"exito\") return;\n  state.usuarioLog = action.data;\n  SStorage.setItem(\"usr_log\", JSON.stringify(action.data));\n  state.login = action.data;\n};\nconst recuperarPass = (state, action) => {\n  if (action.estado != \"exito\") return;\n  if (!state.data) return;\n  state.data[action.data.key] = action.data;\n};\nconst verificarCodigoPass = (state, action) => {\n  // if (action.estado != \"exito\") return;\n  // state.usuarioRecuperado = action.data;\n  if (action.estado === \"exito\") {\n    state.usuarioRecuperado = action.data;\n  }\n  // SStorage.setItem(\"usr_log\", JSON.stringify(action.data));\n  // state.login = action.data\n};\nvar _c;\n$RefreshReg$(_c, \"TypesSwitch\");","map":{"version":3,"names":["SStorage","Parent","initialState","component","version","getItem","resp","usuarioLog","JSON","parse","state","action","TypesSwitch","type","estado","error","lastSend","Date","getAll","registro","editar","getById","login","loginGmail","loginFacebook","recuperarPass","verificarCodigoPass","data","lastRegister","key","setItem","stringify","gmailData","facebookData","usuarioRecuperado"],"sources":["/home/alvaro/Documentos/GitHub/alvarosiles.com/app/src/Services/Usuario/Components/usuario/Reducer.ts"],"sourcesContent":["import { SStorage } from 'servisofts-component'\n\nimport Parent from './index'\n\ntype DataProps = {\n    component: any,\n    type: string,\n    version?: any,\n    estado?: \"exito\" | \"cargando\" | \"error\",\n    error: any,\n    [key: string]: any;\n}\n\nconst initialState = () => {\n    var initialState: any = {\n        component: Parent.component,\n        version: Parent.version,\n    }\n    SStorage.getItem(\"usr_log\", (resp: any) => {\n        initialState.usuarioLog = JSON.parse(resp);\n    })\n    return initialState;\n}\nexport default (state: any, action: DataProps) => {\n    if (!state) return initialState();\n    if (action.component != Parent.component) return state;\n    // if (action.version != Parent.version) return state;\n    TypesSwitch(state, action)\n    state.type = action.type;\n    state.estado = action.estado;\n    state.error = action.error;\n    state.lastSend = new Date();\n    state = { ...state };\n    return state;\n}\n\nconst TypesSwitch = (state: any, action: DataProps) => {\n    switch (action.type) {\n        case \"getAll\": return getAll(state, action);\n        case \"registro\": return registro(state, action);\n        case \"editar\": return editar(state, action);\n        case \"getById\": return getById(state, action);\n        case \"login\": return login(state, action);\n        case \"loginGmail\": return loginGmail(state, action);\n        case \"loginFacebook\": return loginFacebook(state, action);\n        case \"recuperarPass\": return recuperarPass(state, action);\n        case \"verificarCodigoPass\": return verificarCodigoPass(state, action);\n\n\n    }\n}\n\nconst getAll = (state: any, action: DataProps) => {\n    if (action.estado != \"exito\") return;\n    state.data = action.data;\n}\nconst registro = (state: any, action: DataProps) => {\n    if (action.estado != \"exito\") return;\n    state.lastRegister = action.data;\n    if (!state.data) return;\n    state.data[action.data.key] = action.data;\n}\nconst editar = (state: any, action: DataProps) => {\n    if (action.estado != \"exito\") return;\n    if (state.usuarioLog) {\n        if (state.usuarioLog.key == action.data.key) {\n            state.usuarioLog = action.data;\n            SStorage.setItem(\"usr_log\", JSON.stringify(action.data));\n        }\n    }\n    if (!state.data) return;\n    state.data[action.data.key] = action.data;\n}\nconst getById = (state: any, action: DataProps) => {\n    if (action.estado != \"exito\") return;\n    state.data[action.data.key] = action.data;\n}\nconst login = (state: any, action: DataProps) => {\n    if (action.estado != \"exito\") return;\n    state.usuarioLog = action.data;\n    SStorage.setItem(\"usr_log\", JSON.stringify(action.data));\n    state.login = action.data\n}\nconst loginGmail = (state: any, action: DataProps) => {\n    state.gmailData = action.data;\n    if (action.estado != \"exito\") return;\n    state.usuarioLog = action.data;\n    SStorage.setItem(\"usr_log\", JSON.stringify(action.data));\n    state.login = action.data\n}\nconst loginFacebook = (state: any, action: DataProps) => {\n    state.facebookData = action.data;\n    if (action.estado != \"exito\") return;\n    state.usuarioLog = action.data;\n    SStorage.setItem(\"usr_log\", JSON.stringify(action.data));\n    state.login = action.data\n}\nconst recuperarPass = (state: any, action: DataProps) => {\n    if (action.estado != \"exito\") return;\n    if (!state.data) return;\n    state.data[action.data.key] = action.data;\n}\n\nconst verificarCodigoPass = (state: any, action: DataProps) => {\n    // if (action.estado != \"exito\") return;\n    // state.usuarioRecuperado = action.data;\n    if (action.estado === \"exito\") {\n        state.usuarioRecuperado = action.data;\n    }\n    // SStorage.setItem(\"usr_log\", JSON.stringify(action.data));\n    // state.login = action.data\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}