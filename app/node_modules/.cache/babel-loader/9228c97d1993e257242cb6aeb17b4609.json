{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { Dimensions, StyleSheet } from 'react-native';\nimport NativeSafeAreaProvider from './NativeSafeAreaProvider';\nexport const SafeAreaInsetsContext = /*#__PURE__*/React.createContext(null);\nSafeAreaInsetsContext.displayName = 'SafeAreaInsetsContext';\nexport const SafeAreaFrameContext = /*#__PURE__*/React.createContext(null);\nSafeAreaFrameContext.displayName = 'SafeAreaFrameContext';\nexport function SafeAreaProvider(_ref4) {\n  let {\n    children,\n    initialMetrics,\n    initialSafeAreaInsets,\n    style\n  } = _ref4;\n  var _ref, _ref2, _initialMetrics$inset, _ref3, _initialMetrics$frame;\n  const parentInsets = useParentSafeAreaInsets();\n  const parentFrame = useParentSafeAreaFrame();\n  const [insets, setInsets] = React.useState((_ref = (_ref2 = (_initialMetrics$inset = initialMetrics === null || initialMetrics === void 0 ? void 0 : initialMetrics.insets) !== null && _initialMetrics$inset !== void 0 ? _initialMetrics$inset : initialSafeAreaInsets) !== null && _ref2 !== void 0 ? _ref2 : parentInsets) !== null && _ref !== void 0 ? _ref : null);\n  const [frame, setFrame] = React.useState((_ref3 = (_initialMetrics$frame = initialMetrics === null || initialMetrics === void 0 ? void 0 : initialMetrics.frame) !== null && _initialMetrics$frame !== void 0 ? _initialMetrics$frame : parentFrame) !== null && _ref3 !== void 0 ? _ref3 : {\n    // Backwards compat so we render anyway if we don't have frame.\n    x: 0,\n    y: 0,\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  });\n  const onInsetsChange = React.useCallback(event => {\n    const {\n      nativeEvent: {\n        frame: nextFrame,\n        insets: nextInsets\n      }\n    } = event;\n    if (\n    // Backwards compat with old native code that won't send frame.\n    nextFrame && (nextFrame.height !== frame.height || nextFrame.width !== frame.width || nextFrame.x !== frame.x || nextFrame.y !== frame.y)) {\n      setFrame(nextFrame);\n    }\n    if (!insets || nextInsets.bottom !== insets.bottom || nextInsets.left !== insets.left || nextInsets.right !== insets.right || nextInsets.top !== insets.top) {\n      setInsets(nextInsets);\n    }\n  }, [frame, insets]);\n  return /*#__PURE__*/React.createElement(NativeSafeAreaProvider, {\n    style: [styles.fill, style],\n    onInsetsChange: onInsetsChange\n  }, insets != null ? /*#__PURE__*/React.createElement(SafeAreaFrameContext.Provider, {\n    value: frame\n  }, /*#__PURE__*/React.createElement(SafeAreaInsetsContext.Provider, {\n    value: insets\n  }, children)) : null);\n}\nconst styles = StyleSheet.create({\n  fill: {\n    flex: 1\n  }\n});\nfunction useParentSafeAreaInsets() {\n  return React.useContext(SafeAreaInsetsContext);\n}\nfunction useParentSafeAreaFrame() {\n  return React.useContext(SafeAreaFrameContext);\n}\nexport function useSafeAreaInsets() {\n  const safeArea = React.useContext(SafeAreaInsetsContext);\n  if (safeArea == null) {\n    throw new Error('No safe area insets value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.');\n  }\n  return safeArea;\n}\nexport function useSafeAreaFrame() {\n  const frame = React.useContext(SafeAreaFrameContext);\n  if (frame == null) {\n    throw new Error('No safe area frame value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.');\n  }\n  return frame;\n}\nexport function withSafeAreaInsets(WrappedComponent) {\n  return /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SafeAreaConsumer, null, insets => /*#__PURE__*/React.createElement(WrappedComponent, _extends({}, props, {\n    insets: insets,\n    ref: ref\n  }))));\n}\n/**\r\n * @deprecated\r\n */\n\nexport function useSafeArea() {\n  return useSafeAreaInsets();\n}\n/**\r\n * @deprecated\r\n */\n\nexport const SafeAreaConsumer = SafeAreaInsetsContext.Consumer;\n/**\r\n * @deprecated\r\n */\n\nexport const SafeAreaContext = SafeAreaInsetsContext;","map":{"version":3,"mappings":"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","names":["React","Dimensions","StyleSheet","NativeSafeAreaProvider","SafeAreaInsetsContext","createContext","displayName","SafeAreaFrameContext","SafeAreaProvider","children","initialMetrics","initialSafeAreaInsets","style","parentInsets","useParentSafeAreaInsets","parentFrame","useParentSafeAreaFrame","insets","setInsets","useState","frame","setFrame","x","y","width","get","height","onInsetsChange","useCallback","event","nativeEvent","nextFrame","nextInsets","bottom","left","right","top","styles","fill","Provider","value","create","flex","useContext","useSafeAreaInsets","safeArea","Error","useSafeAreaFrame","withSafeAreaInsets","WrappedComponent","forwardRef","props","ref","SafeAreaConsumer","useSafeArea","Consumer","SafeAreaContext"],"sources":["SafeAreaContext.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Dimensions, StyleProp, StyleSheet, ViewStyle } from 'react-native';\nimport NativeSafeAreaProvider from './NativeSafeAreaProvider';\nimport { EdgeInsets, InsetChangedEvent, Metrics, Rect } from './SafeArea.types';\n\nexport const SafeAreaInsetsContext = React.createContext<EdgeInsets | null>(\n  null,\n);\nSafeAreaInsetsContext.displayName = 'SafeAreaInsetsContext';\n\nexport const SafeAreaFrameContext = React.createContext<Rect | null>(null);\nSafeAreaFrameContext.displayName = 'SafeAreaFrameContext';\n\nexport interface SafeAreaViewProps {\n  children?: React.ReactNode;\n  initialMetrics?: Metrics | null;\n  /**\n   * @deprecated\n   */\n  initialSafeAreaInsets?: EdgeInsets | null;\n  style?: StyleProp<ViewStyle>;\n}\n\nexport function SafeAreaProvider({\n  children,\n  initialMetrics,\n  initialSafeAreaInsets,\n  style,\n}: SafeAreaViewProps) {\n  const parentInsets = useParentSafeAreaInsets();\n  const parentFrame = useParentSafeAreaFrame();\n  const [insets, setInsets] = React.useState<EdgeInsets | null>(\n    initialMetrics?.insets ?? initialSafeAreaInsets ?? parentInsets ?? null,\n  );\n  const [frame, setFrame] = React.useState<Rect>(\n    initialMetrics?.frame ??\n      parentFrame ?? {\n        // Backwards compat so we render anyway if we don't have frame.\n        x: 0,\n        y: 0,\n        width: Dimensions.get('window').width,\n        height: Dimensions.get('window').height,\n      },\n  );\n  const onInsetsChange = React.useCallback(\n    (event: InsetChangedEvent) => {\n      const {\n        nativeEvent: { frame: nextFrame, insets: nextInsets },\n      } = event;\n\n      if (\n        // Backwards compat with old native code that won't send frame.\n        nextFrame &&\n        (nextFrame.height !== frame.height ||\n          nextFrame.width !== frame.width ||\n          nextFrame.x !== frame.x ||\n          nextFrame.y !== frame.y)\n      ) {\n        setFrame(nextFrame);\n      }\n\n      if (\n        !insets ||\n        nextInsets.bottom !== insets.bottom ||\n        nextInsets.left !== insets.left ||\n        nextInsets.right !== insets.right ||\n        nextInsets.top !== insets.top\n      ) {\n        setInsets(nextInsets);\n      }\n    },\n    [frame, insets],\n  );\n\n  return (\n    <NativeSafeAreaProvider\n      style={[styles.fill, style]}\n      onInsetsChange={onInsetsChange}\n    >\n      {insets != null ? (\n        <SafeAreaFrameContext.Provider value={frame}>\n          <SafeAreaInsetsContext.Provider value={insets}>\n            {children}\n          </SafeAreaInsetsContext.Provider>\n        </SafeAreaFrameContext.Provider>\n      ) : null}\n    </NativeSafeAreaProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fill: { flex: 1 },\n});\n\nfunction useParentSafeAreaInsets(): EdgeInsets | null {\n  return React.useContext(SafeAreaInsetsContext);\n}\n\nfunction useParentSafeAreaFrame(): Rect | null {\n  return React.useContext(SafeAreaFrameContext);\n}\n\nexport function useSafeAreaInsets(): EdgeInsets {\n  const safeArea = React.useContext(SafeAreaInsetsContext);\n  if (safeArea == null) {\n    throw new Error(\n      'No safe area insets value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.',\n    );\n  }\n  return safeArea;\n}\n\nexport function useSafeAreaFrame(): Rect {\n  const frame = React.useContext(SafeAreaFrameContext);\n  if (frame == null) {\n    throw new Error(\n      'No safe area frame value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.',\n    );\n  }\n  return frame;\n}\n\nexport function withSafeAreaInsets<T>(\n  WrappedComponent: React.ComponentType<T>,\n) {\n  return React.forwardRef((props: T, ref: React.Ref<T>) => (\n    <SafeAreaConsumer>\n      {(insets) => <WrappedComponent {...props} insets={insets} ref={ref} />}\n    </SafeAreaConsumer>\n  ));\n}\n\n/**\n * @deprecated\n */\nexport function useSafeArea(): EdgeInsets {\n  return useSafeAreaInsets();\n}\n\n/**\n * @deprecated\n */\nexport const SafeAreaConsumer = SafeAreaInsetsContext.Consumer;\n\n/**\n * @deprecated\n */\nexport const SafeAreaContext = SafeAreaInsetsContext;\n"]},"metadata":{},"sourceType":"module"}