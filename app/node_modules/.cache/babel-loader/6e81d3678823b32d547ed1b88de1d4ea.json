{"ast":null,"code":"import { Animated, I18nManager } from 'react-native';\nconst {\n  add\n} = Animated;\n/**\r\n * Standard UIKit style animation for the header where the title fades into the back button label.\r\n */\n\nexport function forUIKit(_ref) {\n  let {\n    current,\n    next,\n    layouts\n  } = _ref;\n  const defaultOffset = 100;\n  const leftSpacing = 27; // The title and back button title should cross-fade to each other\n  // When screen is fully open, the title should be in center, and back title should be on left\n  // When screen is closing, the previous title will animate to back title's position\n  // And back title will animate to title's position\n  // We achieve this by calculating the offsets needed to translate title to back title's position and vice-versa\n\n  const leftLabelOffset = layouts.leftLabel ? (layouts.screen.width - layouts.leftLabel.width) / 2 - leftSpacing : defaultOffset;\n  const titleLeftOffset = layouts.title ? (layouts.screen.width - layouts.title.width) / 2 - leftSpacing : defaultOffset; // When the current title is animating to right, it is centered in the right half of screen in middle of transition\n  // The back title also animates in from this position\n\n  const rightOffset = layouts.screen.width / 4;\n  const progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  return {\n    leftButtonStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0.3, 1, 1.5],\n        outputRange: [0, 1, 0]\n      })\n    },\n    leftLabelStyle: {\n      transform: [{\n        translateX: progress.interpolate({\n          inputRange: [0, 1, 2],\n          outputRange: I18nManager.isRTL ? [-rightOffset, 0, leftLabelOffset] : [leftLabelOffset, 0, -rightOffset]\n        })\n      }]\n    },\n    rightButtonStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0.3, 1, 1.5],\n        outputRange: [0, 1, 0]\n      })\n    },\n    titleStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 0.4, 1, 1.5],\n        outputRange: [0, 0.1, 1, 0]\n      }),\n      transform: [{\n        translateX: progress.interpolate({\n          inputRange: [0.5, 1, 2],\n          outputRange: I18nManager.isRTL ? [-titleLeftOffset, 0, rightOffset] : [rightOffset, 0, -titleLeftOffset]\n        })\n      }]\n    },\n    backgroundStyle: {\n      transform: [{\n        translateX: progress.interpolate({\n          inputRange: [0, 1, 2],\n          outputRange: I18nManager.isRTL ? [-layouts.screen.width, 0, layouts.screen.width] : [layouts.screen.width, 0, -layouts.screen.width]\n        })\n      }]\n    }\n  };\n}\n/**\r\n * Simple fade animation for the header elements.\r\n */\n\nexport function forFade(_ref2) {\n  let {\n    current,\n    next\n  } = _ref2;\n  const progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  const opacity = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0, 1, 0]\n  });\n  return {\n    leftButtonStyle: {\n      opacity\n    },\n    rightButtonStyle: {\n      opacity\n    },\n    titleStyle: {\n      opacity\n    },\n    backgroundStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 1, 1.9, 2],\n        outputRange: [0, 1, 1, 0]\n      })\n    }\n  };\n}\n/**\r\n * Simple translate animation to translate the header to left.\r\n */\n\nexport function forSlideLeft(_ref3) {\n  let {\n    current,\n    next,\n    layouts: {\n      screen\n    }\n  } = _ref3;\n  const progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  const translateX = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: I18nManager.isRTL ? [-screen.width, 0, screen.width] : [screen.width, 0, -screen.width]\n  });\n  const transform = [{\n    translateX\n  }];\n  return {\n    leftButtonStyle: {\n      transform\n    },\n    rightButtonStyle: {\n      transform\n    },\n    titleStyle: {\n      transform\n    },\n    backgroundStyle: {\n      transform\n    }\n  };\n}\n/**\r\n * Simple translate animation to translate the header to right.\r\n */\n\nexport function forSlideRight(_ref4) {\n  let {\n    current,\n    next,\n    layouts: {\n      screen\n    }\n  } = _ref4;\n  const progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  const translateX = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: I18nManager.isRTL ? [screen.width, 0, -screen.width] : [-screen.width, 0, screen.width]\n  });\n  const transform = [{\n    translateX\n  }];\n  return {\n    leftButtonStyle: {\n      transform\n    },\n    rightButtonStyle: {\n      transform\n    },\n    titleStyle: {\n      transform\n    },\n    backgroundStyle: {\n      transform\n    }\n  };\n}\n/**\r\n * Simple translate animation to translate the header to slide up.\r\n */\n\nexport function forSlideUp(_ref5) {\n  let {\n    current,\n    next,\n    layouts: {\n      header\n    }\n  } = _ref5;\n  const progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  const translateY = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [-header.height, 0, -header.height]\n  });\n  const transform = [{\n    translateY\n  }];\n  return {\n    leftButtonStyle: {\n      transform\n    },\n    rightButtonStyle: {\n      transform\n    },\n    titleStyle: {\n      transform\n    },\n    backgroundStyle: {\n      transform\n    }\n  };\n}\nexport function forNoAnimation() {\n  return {};\n}","map":{"version":3,"mappings":"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","names":["Animated","I18nManager","add","forUIKit","current","next","layouts","defaultOffset","leftSpacing","leftLabelOffset","leftLabel","screen","width","titleLeftOffset","title","rightOffset","progress","interpolate","inputRange","outputRange","extrapolate","leftButtonStyle","opacity","leftLabelStyle","transform","translateX","isRTL","rightButtonStyle","titleStyle","backgroundStyle","forFade","forSlideLeft","forSlideRight","forSlideUp","header","translateY","height","forNoAnimation"],"sources":["HeaderStyleInterpolators.tsx"],"sourcesContent":["import { Animated, I18nManager } from 'react-native';\nimport type {\n  StackHeaderInterpolationProps,\n  StackHeaderInterpolatedStyle,\n} from '../types';\n\nconst { add } = Animated;\n\n/**\n * Standard UIKit style animation for the header where the title fades into the back button label.\n */\nexport function forUIKit({\n  current,\n  next,\n  layouts,\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\n  const defaultOffset = 100;\n  const leftSpacing = 27;\n\n  // The title and back button title should cross-fade to each other\n  // When screen is fully open, the title should be in center, and back title should be on left\n  // When screen is closing, the previous title will animate to back title's position\n  // And back title will animate to title's position\n  // We achieve this by calculating the offsets needed to translate title to back title's position and vice-versa\n  const leftLabelOffset = layouts.leftLabel\n    ? (layouts.screen.width - layouts.leftLabel.width) / 2 - leftSpacing\n    : defaultOffset;\n  const titleLeftOffset = layouts.title\n    ? (layouts.screen.width - layouts.title.width) / 2 - leftSpacing\n    : defaultOffset;\n\n  // When the current title is animating to right, it is centered in the right half of screen in middle of transition\n  // The back title also animates in from this position\n  const rightOffset = layouts.screen.width / 4;\n\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  return {\n    leftButtonStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0.3, 1, 1.5],\n        outputRange: [0, 1, 0],\n      }),\n    },\n    leftLabelStyle: {\n      transform: [\n        {\n          translateX: progress.interpolate({\n            inputRange: [0, 1, 2],\n            outputRange: I18nManager.isRTL\n              ? [-rightOffset, 0, leftLabelOffset]\n              : [leftLabelOffset, 0, -rightOffset],\n          }),\n        },\n      ],\n    },\n    rightButtonStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0.3, 1, 1.5],\n        outputRange: [0, 1, 0],\n      }),\n    },\n    titleStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 0.4, 1, 1.5],\n        outputRange: [0, 0.1, 1, 0],\n      }),\n      transform: [\n        {\n          translateX: progress.interpolate({\n            inputRange: [0.5, 1, 2],\n            outputRange: I18nManager.isRTL\n              ? [-titleLeftOffset, 0, rightOffset]\n              : [rightOffset, 0, -titleLeftOffset],\n          }),\n        },\n      ],\n    },\n    backgroundStyle: {\n      transform: [\n        {\n          translateX: progress.interpolate({\n            inputRange: [0, 1, 2],\n            outputRange: I18nManager.isRTL\n              ? [-layouts.screen.width, 0, layouts.screen.width]\n              : [layouts.screen.width, 0, -layouts.screen.width],\n          }),\n        },\n      ],\n    },\n  };\n}\n\n/**\n * Simple fade animation for the header elements.\n */\nexport function forFade({\n  current,\n  next,\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const opacity = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0, 1, 0],\n  });\n\n  return {\n    leftButtonStyle: { opacity },\n    rightButtonStyle: { opacity },\n    titleStyle: { opacity },\n    backgroundStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 1, 1.9, 2],\n        outputRange: [0, 1, 1, 0],\n      }),\n    },\n  };\n}\n\n/**\n * Simple translate animation to translate the header to left.\n */\nexport function forSlideLeft({\n  current,\n  next,\n  layouts: { screen },\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const translateX = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: I18nManager.isRTL\n      ? [-screen.width, 0, screen.width]\n      : [screen.width, 0, -screen.width],\n  });\n\n  const transform = [{ translateX }];\n\n  return {\n    leftButtonStyle: { transform },\n    rightButtonStyle: { transform },\n    titleStyle: { transform },\n    backgroundStyle: { transform },\n  };\n}\n\n/**\n * Simple translate animation to translate the header to right.\n */\nexport function forSlideRight({\n  current,\n  next,\n  layouts: { screen },\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const translateX = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: I18nManager.isRTL\n      ? [screen.width, 0, -screen.width]\n      : [-screen.width, 0, screen.width],\n  });\n\n  const transform = [{ translateX }];\n\n  return {\n    leftButtonStyle: { transform },\n    rightButtonStyle: { transform },\n    titleStyle: { transform },\n    backgroundStyle: { transform },\n  };\n}\n\n/**\n * Simple translate animation to translate the header to slide up.\n */\nexport function forSlideUp({\n  current,\n  next,\n  layouts: { header },\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const translateY = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [-header.height, 0, -header.height],\n  });\n\n  const transform = [{ translateY }];\n\n  return {\n    leftButtonStyle: { transform },\n    rightButtonStyle: { transform },\n    titleStyle: { transform },\n    backgroundStyle: { transform },\n  };\n}\n\nexport function forNoAnimation(): StackHeaderInterpolatedStyle {\n  return {};\n}\n"]},"metadata":{},"sourceType":"module"}