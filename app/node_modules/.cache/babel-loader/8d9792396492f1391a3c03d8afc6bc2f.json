{"ast":null,"code":"/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nvar dataUriPattern = /^data:/;\nexport var ImageUriCache = /*#__PURE__*/function () {\n  function ImageUriCache() {}\n  ImageUriCache.has = function has(uri) {\n    var entries = ImageUriCache._entries;\n    var isDataUri = dataUriPattern.test(uri);\n    return isDataUri || Boolean(entries[uri]);\n  };\n  ImageUriCache.add = function add(uri) {\n    var entries = ImageUriCache._entries;\n    var lastUsedTimestamp = Date.now();\n    if (entries[uri]) {\n      entries[uri].lastUsedTimestamp = lastUsedTimestamp;\n      entries[uri].refCount += 1;\n    } else {\n      entries[uri] = {\n        lastUsedTimestamp: lastUsedTimestamp,\n        refCount: 1\n      };\n    }\n  };\n  ImageUriCache.remove = function remove(uri) {\n    var entries = ImageUriCache._entries;\n    if (entries[uri]) {\n      entries[uri].refCount -= 1;\n    } // Free up entries when the cache is \"full\"\n\n    ImageUriCache._cleanUpIfNeeded();\n  };\n  ImageUriCache._cleanUpIfNeeded = function _cleanUpIfNeeded() {\n    var entries = ImageUriCache._entries;\n    var imageUris = Object.keys(entries);\n    if (imageUris.length + 1 > ImageUriCache._maximumEntries) {\n      var leastRecentlyUsedKey;\n      var leastRecentlyUsedEntry;\n      imageUris.forEach(function (uri) {\n        var entry = entries[uri];\n        if ((!leastRecentlyUsedEntry || entry.lastUsedTimestamp < leastRecentlyUsedEntry.lastUsedTimestamp) && entry.refCount === 0) {\n          leastRecentlyUsedKey = uri;\n          leastRecentlyUsedEntry = entry;\n        }\n      });\n      if (leastRecentlyUsedKey) {\n        delete entries[leastRecentlyUsedKey];\n      }\n    }\n  };\n  return ImageUriCache;\n}();\nImageUriCache._maximumEntries = 256;\nImageUriCache._entries = {};\nvar id = 0;\nvar requests = {};\nvar ImageLoader = {\n  abort: function abort(requestId) {\n    var image = requests[\"\" + requestId];\n    if (image) {\n      image.onerror = null;\n      image.onload = null;\n      image = null;\n      delete requests[\"\" + requestId];\n    }\n  },\n  getSize: function getSize(uri, success, failure) {\n    var complete = false;\n    var interval = setInterval(callback, 16);\n    var requestId = ImageLoader.load(uri, callback, errorCallback);\n    function callback() {\n      var image = requests[\"\" + requestId];\n      if (image) {\n        var naturalHeight = image.naturalHeight,\n          naturalWidth = image.naturalWidth;\n        if (naturalHeight && naturalWidth) {\n          success(naturalWidth, naturalHeight);\n          complete = true;\n        }\n      }\n      if (complete) {\n        ImageLoader.abort(requestId);\n        clearInterval(interval);\n      }\n    }\n    function errorCallback() {\n      if (typeof failure === 'function') {\n        failure();\n      }\n      ImageLoader.abort(requestId);\n      clearInterval(interval);\n    }\n  },\n  has: function has(uri) {\n    return ImageUriCache.has(uri);\n  },\n  load: function load(uri, onLoad, onError) {\n    id += 1;\n    var image = new window.Image();\n    image.onerror = onError;\n    image.onload = function (e) {\n      // avoid blocking the main thread\n      var onDecode = function onDecode() {\n        return onLoad({\n          nativeEvent: e\n        });\n      };\n      if (typeof image.decode === 'function') {\n        // Safari currently throws exceptions when decoding svgs.\n        // We want to catch that error and allow the load handler\n        // to be forwarded to the onLoad handler in this case\n        image.decode().then(onDecode, onDecode);\n      } else {\n        setTimeout(onDecode, 0);\n      }\n    };\n    image.src = uri;\n    requests[\"\" + id] = image;\n    return id;\n  },\n  prefetch: function prefetch(uri) {\n    return new Promise(function (resolve, reject) {\n      ImageLoader.load(uri, function () {\n        // Add the uri to the cache so it can be immediately displayed when used\n        // but also immediately remove it to correctly reflect that it has no active references\n        ImageUriCache.add(uri);\n        ImageUriCache.remove(uri);\n        resolve();\n      }, reject);\n    });\n  },\n  queryCache: function queryCache(uris) {\n    var result = {};\n    uris.forEach(function (u) {\n      if (ImageUriCache.has(u)) {\n        result[u] = 'disk/memory';\n      }\n    });\n    return Promise.resolve(result);\n  }\n};\nexport default ImageLoader;","map":{"version":3,"names":["dataUriPattern","ImageUriCache","has","uri","entries","_entries","isDataUri","test","Boolean","add","lastUsedTimestamp","Date","now","refCount","remove","_cleanUpIfNeeded","imageUris","Object","keys","length","_maximumEntries","leastRecentlyUsedKey","leastRecentlyUsedEntry","forEach","entry","id","requests","ImageLoader","abort","requestId","image","onerror","onload","getSize","success","failure","complete","interval","setInterval","callback","load","errorCallback","naturalHeight","naturalWidth","clearInterval","onLoad","onError","window","Image","e","onDecode","nativeEvent","decode","then","setTimeout","src","prefetch","Promise","resolve","reject","queryCache","uris","result","u"],"sources":["C:/Users/julieta/Documents/GitHub/alvarosiles.com/app/node_modules/react-native-web/dist/modules/ImageLoader/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nvar dataUriPattern = /^data:/;\r\nexport var ImageUriCache = /*#__PURE__*/function () {\r\n  function ImageUriCache() {}\r\n\r\n  ImageUriCache.has = function has(uri) {\r\n    var entries = ImageUriCache._entries;\r\n    var isDataUri = dataUriPattern.test(uri);\r\n    return isDataUri || Boolean(entries[uri]);\r\n  };\r\n\r\n  ImageUriCache.add = function add(uri) {\r\n    var entries = ImageUriCache._entries;\r\n    var lastUsedTimestamp = Date.now();\r\n\r\n    if (entries[uri]) {\r\n      entries[uri].lastUsedTimestamp = lastUsedTimestamp;\r\n      entries[uri].refCount += 1;\r\n    } else {\r\n      entries[uri] = {\r\n        lastUsedTimestamp: lastUsedTimestamp,\r\n        refCount: 1\r\n      };\r\n    }\r\n  };\r\n\r\n  ImageUriCache.remove = function remove(uri) {\r\n    var entries = ImageUriCache._entries;\r\n\r\n    if (entries[uri]) {\r\n      entries[uri].refCount -= 1;\r\n    } // Free up entries when the cache is \"full\"\r\n\r\n\r\n    ImageUriCache._cleanUpIfNeeded();\r\n  };\r\n\r\n  ImageUriCache._cleanUpIfNeeded = function _cleanUpIfNeeded() {\r\n    var entries = ImageUriCache._entries;\r\n    var imageUris = Object.keys(entries);\r\n\r\n    if (imageUris.length + 1 > ImageUriCache._maximumEntries) {\r\n      var leastRecentlyUsedKey;\r\n      var leastRecentlyUsedEntry;\r\n      imageUris.forEach(function (uri) {\r\n        var entry = entries[uri];\r\n\r\n        if ((!leastRecentlyUsedEntry || entry.lastUsedTimestamp < leastRecentlyUsedEntry.lastUsedTimestamp) && entry.refCount === 0) {\r\n          leastRecentlyUsedKey = uri;\r\n          leastRecentlyUsedEntry = entry;\r\n        }\r\n      });\r\n\r\n      if (leastRecentlyUsedKey) {\r\n        delete entries[leastRecentlyUsedKey];\r\n      }\r\n    }\r\n  };\r\n\r\n  return ImageUriCache;\r\n}();\r\nImageUriCache._maximumEntries = 256;\r\nImageUriCache._entries = {};\r\nvar id = 0;\r\nvar requests = {};\r\nvar ImageLoader = {\r\n  abort: function abort(requestId) {\r\n    var image = requests[\"\" + requestId];\r\n\r\n    if (image) {\r\n      image.onerror = null;\r\n      image.onload = null;\r\n      image = null;\r\n      delete requests[\"\" + requestId];\r\n    }\r\n  },\r\n  getSize: function getSize(uri, success, failure) {\r\n    var complete = false;\r\n    var interval = setInterval(callback, 16);\r\n    var requestId = ImageLoader.load(uri, callback, errorCallback);\r\n\r\n    function callback() {\r\n      var image = requests[\"\" + requestId];\r\n\r\n      if (image) {\r\n        var naturalHeight = image.naturalHeight,\r\n            naturalWidth = image.naturalWidth;\r\n\r\n        if (naturalHeight && naturalWidth) {\r\n          success(naturalWidth, naturalHeight);\r\n          complete = true;\r\n        }\r\n      }\r\n\r\n      if (complete) {\r\n        ImageLoader.abort(requestId);\r\n        clearInterval(interval);\r\n      }\r\n    }\r\n\r\n    function errorCallback() {\r\n      if (typeof failure === 'function') {\r\n        failure();\r\n      }\r\n\r\n      ImageLoader.abort(requestId);\r\n      clearInterval(interval);\r\n    }\r\n  },\r\n  has: function has(uri) {\r\n    return ImageUriCache.has(uri);\r\n  },\r\n  load: function load(uri, onLoad, onError) {\r\n    id += 1;\r\n    var image = new window.Image();\r\n    image.onerror = onError;\r\n\r\n    image.onload = function (e) {\r\n      // avoid blocking the main thread\r\n      var onDecode = function onDecode() {\r\n        return onLoad({\r\n          nativeEvent: e\r\n        });\r\n      };\r\n\r\n      if (typeof image.decode === 'function') {\r\n        // Safari currently throws exceptions when decoding svgs.\r\n        // We want to catch that error and allow the load handler\r\n        // to be forwarded to the onLoad handler in this case\r\n        image.decode().then(onDecode, onDecode);\r\n      } else {\r\n        setTimeout(onDecode, 0);\r\n      }\r\n    };\r\n\r\n    image.src = uri;\r\n    requests[\"\" + id] = image;\r\n    return id;\r\n  },\r\n  prefetch: function prefetch(uri) {\r\n    return new Promise(function (resolve, reject) {\r\n      ImageLoader.load(uri, function () {\r\n        // Add the uri to the cache so it can be immediately displayed when used\r\n        // but also immediately remove it to correctly reflect that it has no active references\r\n        ImageUriCache.add(uri);\r\n        ImageUriCache.remove(uri);\r\n        resolve();\r\n      }, reject);\r\n    });\r\n  },\r\n  queryCache: function queryCache(uris) {\r\n    var result = {};\r\n    uris.forEach(function (u) {\r\n      if (ImageUriCache.has(u)) {\r\n        result[u] = 'disk/memory';\r\n      }\r\n    });\r\n    return Promise.resolve(result);\r\n  }\r\n};\r\nexport default ImageLoader;"],"mappings":"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"},"metadata":{},"sourceType":"module"}